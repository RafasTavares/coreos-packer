#!/bin/bash

#-----------------------|DOCUMENTATION|-----------------------#
# @descr: Script to test the Makefile
# @fonts: 	
# @example:
#       bash Makefile.test plan
#    OR
#       bash Makefile.test compile
#-------------------------------------------------------------#

# @descr: Main function of the script, it runs automatically on the script call.
# @param: 
#    $@ | array: (*)
function MakefileTest {
    # WARNING: When you change the RELEASE of CoreOS, you should also change the 
    # file in ".../container-linux-config/keys-to-underworld.yml" for (update: group: "stable")
    local coreos_release="stable";
    local coreos_version="1632.3.0";

    local template="coreos-virtualbox-template.json";
    local variables="vars-global.json vars-coreos.json vars-virtualbox.json vars-custom.json";
    local packer_only="virtualbox-iso";

    local ARGUMENTS="COREOS_RELEASE='${coreos_release}' COREOS_VERSION='${coreos_version}' PACKER_TEMPLATE='${template}' PACKER_VARIABLES='${variables}' PACKER_ONLY='${packer_only}'";

    case "$@" in
        plan) {
            sh -c "make plan ${ARGUMENTS}";

        };;
        compile) {
            bash -c "make plan compile ${ARGUMENTS}";

        };;
        validate) {
            bash -c "make plan validate ${ARGUMENTS}";

        };;
        build) {
            bash -c "make plan compile validate build ${ARGUMENTS}";

        };;
        build-force) {
            bash -c "make build-force ${ARGUMENTS}";

        };;
        install-box) {
            bash -c "make plan install-box ${ARGUMENTS}";

        };;
        publish-box) {
            bash -c "make plan publish-box ${ARGUMENTS}";

        };;
        uninstall-box) {
            bash -c "make plan uninstall-box ${ARGUMENTS}";

        };;
        clean) {
            bash -c "make plan clean ${ARGUMENTS}";

        };;
        *) {
            echo "WARNING: The test type has not been passed or is incorrect.";
        };;
    esac
}

# @descr: Create folder for log.
mkdir -p "${PWD}/builds";

# @descr: Call of execution of the script's main function.
MakefileTest "$@" 2>&1 | tee "${PWD}/builds/Makefile.test.log";

# @descr: Finishing the script!!! :P
exit 0;